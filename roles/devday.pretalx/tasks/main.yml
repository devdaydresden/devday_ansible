---
- name: create directory for devday
  ansible.builtin.file:
    path: /var/lib/devday
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: create Redis container
  community.docker.docker_container:
    name: redis
    image: "redis:{{ devday_redis_version|default('latest') }}"
    restart_policy: unless-stopped
    networks:
      - name: pretalx_net
    volumes:
      - redis-data:/data

- name: create PreTalx web container
  community.docker.docker_container:
    name: pretalx-web
    image: "pretalx/standalone:{{ devday_pretalx_version|default('latest') }}"
    entrypoint: gunicorn
    command:
      - "pretalx.wsgi"
      - "--name"
      - "pretalx"
      - "--workers"
      - "4"
      - "--max-requests"
      - "1200"
      - "--max-requests-jitter"
      - "50"
      - "--log-level=info"
      - "--bind=0.0.0.0:8080"
    expose:
      - 8080/tcp
    restart_policy: unless-stopped
    env:
      PRETALX_DATA_DIR: /data
      PRETALX_FILESYSTEM_STATIC: /static
      PRETALX_SITE_URL: "{{ devday_pretalx_site_url }}"
      PRETALX_DB_TYPE: postgresql
      PRETALX_DB_NAME: "{{ devday_pretalx_db_name|default('pretalx') }}"
      PRETALX_DB_USER: "{{ devday_pretalx_db_user|default('pretalx') }}"
      PRETALX_DB_PASS: "{{ devday_pretalx_db_password|default('pretalx') }}"
      PRETALX_DB_HOST: pgsql
      PRETALX_DB_PORT: "{{ devday_pretalx_db_port|default(omit) }}"
      PRETALX_MAIL_FROM: "{{ devday_pretalx_mail_from }}"
      PRETALX_MAIL_HOST: "{{ devday_pretalx_mail_host|default('mail') }}"
      PRETALX_MAIL_PORT: "{{ devday_pretalx_mail_port|default(25) }}"
      PRETALX_MAIL_USER: "{{ devday_pretalx_mail_user|default(omit) }}"
      PRETALX_MAIL_PASSWORD: "{{ devday_pretalx_mail_password|default(omit) }}"
      PRETALX_MAIL_TLS: "{{ devday_pretalx_mail_tls|default(omit) }}"
      PRETALX_CELERY_BACKEND: redis://redis/1
      PRETALX_CELERY_BROKER: redis://redis/2
      PRETALX_REDIS: redis://redis/3
      PRETALX_REDIS_SESSIONS: "True"
      PRETALX_LOGGING_EMAIL: "{{ devday_pretalx_logging_email|default(omit) }}"
      PRETALX_LANGUAGE_CODE: de
      PRETALX_TIME_ZONE: Europe/Berlin
    networks:
      - name: pretalx_net
    volumes:
      - pretalx-data:/data
      - pretalx-static:/static
    labels:
      traefik.enable: "true"
      traefik.docker.network: pretalx_net
      traefik.http.routers.pretalx-web.rule: "Host(`pretalx.devday-test.gruenkohl.org`)"
      traefik.http.routers.pretalx-web.tls: "true"
      traefik.http.routers.pretalx-web.tls.domains: "pretalx.devday-test.gruenkohl.org"
      traefik.http.routers.pretalx-web.service: pretalx
      traefik.http.routers.pretalx-web.tls.certResolver: "myresolver"
      traefik.http.services.pretalx.loadbalancer.server.port: "8080"
      traefik.http.services.pretalx.loadbalancer.passhostheader: "true"

- name: create PreTalx celery worker container
  community.docker.docker_container:
    name: pretalx-celery
    image: "pretalx/standalone:{{ devday_pretalx_version|default('latest') }}"
    command: taskworker
    restart_policy: unless-stopped
    env:
      PRETALX_DATA_DIR: /data
      PRETALX_FILESYSTEM_STATIC: /static
      PRETALX_SITE_URL: "{{ devday_pretalx_site_url }}"
      PRETALX_DB_TYPE: postgresql
      PRETALX_DB_NAME: "{{ devday_pretalx_db_name|default('pretalx') }}"
      PRETALX_DB_USER: "{{ devday_pretalx_db_user|default('pretalx') }}"
      PRETALX_DB_PASS: "{{ devday_pretalx_db_password|default('pretalx') }}"
      PRETALX_DB_HOST: pgsql
      PRETALX_DB_PORT: "{{ devday_pretalx_db_port|default(omit) }}"
      PRETALX_MAIL_FROM: "{{ devday_pretalx_mail_from }}"
      PRETALX_MAIL_HOST: "{{ devday_pretalx_mail_host|default('mail') }}"
      PRETALX_MAIL_PORT: "{{ devday_pretalx_mail_port|default(25) }}"
      PRETALX_MAIL_USER: "{{ devday_pretalx_mail_user|default(omit) }}"
      PRETALX_MAIL_PASSWORD: "{{ devday_pretalx_mail_password|default(omit) }}"
      PRETALX_MAIL_TLS: "{{ devday_pretalx_mail_tls|default(omit) }}"
      PRETALX_CELERY_BACKEND: redis://redis/1
      PRETALX_CELERY_BROKER: redis://redis/2
      PRETALX_REDIS: redis://redis/3
      PRETALX_REDIS_SESSIONS: "True"
      PRETALX_LOGGING_EMAIL: "{{ devday_pretalx_logging_email|default(omit) }}"
      PRETALX_LANGUAGE_CODE: de
      PRETALX_TIME_ZONE: Europe/Berlin
    volumes:
      - pretalx-data:/data
      - pretalx-static:/static
    networks:
      - name: pretalx_net

# setup outgoing mail relay
- name: create Postfix mail relay container
  community.docker.docker_container:
    name: mail
    image: "panubo/postfix:{{ devday_postfix_version }}"
    env:
      MAILNAME: "{{ devday_mailname }}"
      BOUNCE_ADDRESS: "{{ devday_pretalx_mail_from }}"
    volumes:
      - postfix_spool:/var/spool/postfix:rw
    networks:
      - name: pretalx_net

# setup traefik reverse proxy
- name: create traefik configuration directory
  ansible.builtin.file:
    path: /etc/traefik
    state: directory
    owner: root
    group: root
    mode: "0750"

- name: create traefik configuration file
  ansible.builtin.template:
    src: traefik_config.toml.j2
    dest: /etc/traefik/config.toml
    owner: root
    group: root
    mode: "0640"

- name: create traefik working directory
  ansible.builtin.file:
    path: /var/lib/traefik
    state: directory
    owner: root
    group: root
    mode: "0750"

- name: download traefik binary
  ansible.builtin.get_url:
    url: "https://github.com/traefik/traefik/releases/download/{{ traefik_version }}/traefik_{{ traefik_version }}_linux_amd64.tar.gz"
    checksum: "{{ traefik_archive_checksum }}"
    dest: "/var/lib/devday/traefik_{{ traefik_version }}_linux_amd64.tar.gz"
    owner: root
    group: root
    mode: "0644"

- name: unpack traefik binary
  ansible.builtin.unarchive:
    src: "/var/lib/devday/traefik_{{ traefik_version }}_linux_amd64.tar.gz"
    remote_src: yes
    dest: "/usr/local/sbin"
    include: traefik
    owner: root
    group: root
    mode: "0750"

- name: create systemd service for traefik
  ansible.builtin.copy:
    src: traefik.service
    dest: /etc/systemd/system/traefik.service
    owner: root
    group: root
    mode: 0644

- name: reload systemd config
  ansible.builtin.systemd:
    daemon_reload: yes

- name: start and enable traefik
  ansible.builtin.systemd:
    name: traefik
    state: started
    enabled: yes
